WVS <- readRDS("WVS.rds")
WVS$V2A <- as_character(WVS$V2A)
WVS <- readRDS("WVS.rds")
WVS$V2A <- as.character(WVS$V2A)
WVS <- readRDS("WVS.rds")
WVS$V2A <- as.character(WVS$V2A)
WVS$V2A
WVS <- readRDS("WVS.rds")
WVS$V2A <- as.character(WVS$V2A)
WVS$V2A
unique_countries <- unique(WVS$V2A)
num_countries <- length(unique_countries)
print(paste(" 共有", num_countries, " 个国家编号"))
WVS <- readRDS("WVS.rds")
WVS$V2A <- as.character(WVS$V2A)
WVS$V2A
unique_countries <- unique(WVS$V2A)
unique_countries
num_countries <- length(unique_countries)
print(paste(" 共有", num_countries, " 个国家编号"))
WVS <- readRDS("WVS.rds")
WVS$V2A <- as.character(WVS$V2A)
num_countries <- length( unique(WVS$V2A))
print(paste(" 共有", num_countries, " 个国家编号"))
data <- WVS %>% select(V2A, V23)
selected_data <- WVS[, c("V2A", "V23")]
selected_data
selected_data <- WVS[, c("V2A", "V23")]
life_satisfaction <- selected_data$V23
life_satisfaction
selected_data
selected_data <- WVS[, c("V2A", "V23")]
life_satisfaction <- selected_data$V23
life_satisfaction
WVS$V23
selected_data
# 计算统计量
median_val <- median(WVS$V23, na.rm = TRUE)
mean_val <- mean(WVS$V23, na.rm = TRUE)
sd_val <- sd(WVS$V23, na.rm = TRUE)
skewness_val <- skewness(WVS$V23, na.rm = TRUE)
# 加载 moments 库,以引用skewness函数计算偏度
library(moments)
# 计算统计量
median_val <- median(WVS$V23, na.rm = TRUE)
mean_val <- mean(WVS$V23, na.rm = TRUE)
sd_val <- sd(WVS$V23, na.rm = TRUE)
skewness_val <- skewness(WVS$V23, na.rm = TRUE)
kurtosis_val <- kurtosis(WVS$V23, na.rm = TRUE)
# 打印统计量
cat("中位数:", median_val, "\n")
cat("平均值:", mean_val, "\n")
cat("标准差:", sd_val, "\n")
cat("偏度:", skewness_val, "\n")
cat("峰度:", kurtosis_val, "\n")
# 加载 moments 库,以引用skewness函数计算偏度
#library(moments)
library(e1071)
# 加载 moments 库,以引用skewness函数计算偏度
library(moments)
# 计算统计量
median_val <- median(WVS$V23, na.rm = TRUE)
mean_val <- mean(WVS$V23, na.rm = TRUE)
sd_val <- sd(WVS$V23, na.rm = TRUE)
skewness_val <- skewness(WVS$V23, na.rm = TRUE)
kurtosis_val <- kurtosis(WVS$V23, na.rm = TRUE)
# 打印统计量
cat("中位数:", median_val, "\n")
cat("平均值:", mean_val, "\n")
cat("标准差:", sd_val, "\n")
cat("偏度:", skewness_val, "\n")
cat("峰度:", kurtosis_val, "\n")
library(ggplot2)
plot <- ggplot(WVS, aes(x = V23)) +
3
library(ggplot2)
plot <- ggplot(WVS, aes(x = V23)) +
geom_histogram(aes(y = after_stat(density)), binwidth = 1.6, fill = "green", alpha = 0.7) +
geom_density(color = "red", linewidth = 1.1) +
geom_vline(aes(xintercept = mean(V23, na.rm = TRUE)), color = "blue", linetype="dashed", linewidth = 1) +
labs(title = " 生活满意度分布直方图", x = " 生活满意度", y = " 密度") +
theme_minimal()
print(plot)
selected_data <- WVS[, c("V2A", "V23")]
life_satisfaction <- selected_data$V23
country_code <- selected_data$V2A
table(selected_data$V2A)
library(ggplot2)
plot <- ggplot(WVS, aes(x = V23)) +
geom_histogram(aes(y = after_stat(density)), binwidth = 1.6, fill = "#f4aeb0", alpha = 0.7) +
geom_density(color = "#65bab7", linewidth = 1.1) +
geom_vline(aes(xintercept = mean(V23, na.rm = TRUE)), color = "#fe616a", linetype="dashed", linewidth = 1) +
labs(title = " 生活满意度分布直方图", x = " 生活满意度", y = " 密度") +
theme_minimal()
print(plot)
library(ggplot2)
plot <- ggplot(WVS, aes(x = V23)) +
geom_histogram(aes(y = after_stat(density)), binwidth = 1.6, fill = "#f4aeb0", alpha = 0.7) + geom_density(color = "#65bab7", linewidth = 1.1) + geom_vline(aes(xintercept = mean(V23, na.rm = TRUE)), color = "#fe616a", linetype="dashed", linewidth = 1) + labs(title = " 生活满意度分布直方图", x = " 生活满意度", y = " 密度") + theme_minimal()
print(plot)
# 计算每个国家的平均生活满意度
country_satisfaction <- aggregate(V23 ~ V2A, WVS, mean, na.rm = TRUE)
# 对数据按生活满意度排序
country_satisfaction <- country_satisfaction[order(country_satisfaction$V23),]
# 使用 ggplot2 绘图
plot_country <- ggplot(country_satisfaction, aes(x = reorder(V2A, V23), y = V23, fill = V23)) +
geom_bar(stat = "identity") + coord_flip() + labs(title = " 各国生活满意度平均分数", x = " 国家", y = " 平均生活满意度分数") + theme_minimal() +
scale_fill_gradient(low = "lightblue", high = "steelblue") + # 从浅蓝到深蓝的渐变
theme(aspect.ratio = 1) # 设置宽高比为 1
print(plot_country)
# 获取满意度最高和最低的国家
highest_country <- tail(country_satisfaction, 1)
lowest_country <- head(country_satisfaction, 1)
cat(" ⼈⺠⽣活满意度最高的国家是:", highest_country$V2A, " 分数为:", highest_country$V23, "\n")
cat(" ⼈⺠⽣活满意度最低的国家是:", lowest_country$V2A, " 分数为:", lowest_country$V23, "\n")
# 获取满意度最高和最低的国家
highest_country <- tail(country_satisfaction, 1)
lowest_country <- head(country_satisfaction, 1)
cat(" ⼈⺠⽣活满意度最高的国家是:", highest_country$V2A, " 分数为:", highest_country$V23, "\n")
cat(" ⼈⺠⽣活满意度最低的国家是:", lowest_country$V2A, " 分数为:", lowest_country$V23, "\n")
# 计算每个国家的平均生活满意度
country_satisfaction <- aggregate(V23 ~ V2A, WVS, mean, na.rm = TRUE)
# 对数据按生活满意度排序
country_satisfaction <- country_satisfaction[order(country_satisfaction$V23),]
# 使用 ggplot2 绘图
plot_country <- ggplot(country_satisfaction, aes(x = reorder(V2A, V23), y = V23, fill = V23)) +
geom_bar(stat = "identity") + coord_flip() + labs(title = " 各国生活满意度平均分数", x = " 国家", y = " 平均生活满意度分数") + theme_minimal() +
scale_fill_gradient(low = "lightblue", high = "steelblue") + # 从浅蓝到深蓝的渐变
theme(aspect.ratio = 1) # 设置宽高比为 1
print(plot_country)
# 计算每个国家的平均生活满意度
country_satisfaction <- aggregate(V23 ~ V2A, WVS, mean, na.rm = TRUE)
# 对数据按生活满意度排序
country_satisfaction <- country_satisfaction[order(country_satisfaction$V23),]
# 使用 ggplot2 绘图
plot_country <- ggplot(country_satisfaction, aes(x = reorder(V2A, V23), y = V23, fill = V23)) +
geom_bar(stat = "identity") + coord_flip() + labs(title = " 各国生活满意度平均分数", x = " 国家", y = " 平均生活满意度分数") + theme_minimal() +
scale_fill_gradient(low = "#cdc7e2", high = "#87719f") + # 从浅蓝到深蓝的渐变
theme(aspect.ratio = 1) # 设置宽高比为 1
print(plot_country)
# 计算每个国家的平均生活满意度
country_satisfaction <- aggregate(V23 ~ V2A, WVS, mean, na.rm = TRUE)
# 对数据按生活满意度排序
country_satisfaction <- country_satisfaction[order(country_satisfaction$V23),]
# 使用 ggplot2 绘图
plot_country <- ggplot(country_satisfaction, aes(x = reorder(V2A, V23), y = V23, fill = V23)) +
geom_bar(stat = "identity") + coord_flip() + labs(title = " 各国生活满意度平均分数", x = " 国家", y = " 平均生活满意度分数") + theme_minimal() +
scale_fill_gradient(low = "#cdc7e2", high = "#5e4c66") + # 从浅蓝到深蓝的渐变
theme(aspect.ratio = 1) # 设置宽高比为 1
print(plot_country)
